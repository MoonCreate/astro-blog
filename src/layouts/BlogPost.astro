---
import type { CollectionEntry } from "astro:content";
import BaseHead from "#components/BaseHead.astro";
import Header from "#components/Header.astro";
import Footer from "#components/Footer.astro";
import FormattedDate from "#components/FormattedDate.astro";
import BreadCrumb from "#root/components/Toppings/BreadCrumb.astro";
import { Image } from "astro:assets";
import LikeButton from "#root/components/Toppings/LikeButton";
import { FrownIcon, SmileIcon } from "astro-feather";

type Props = CollectionEntry<"blog">["data"] & { slug: string };

const { title, description, pubDate, updatedDate, heroImage, slug } = Astro.props;
---

<html lang="en">
	<head>
		<BaseHead title={title} description={description} />
		<style>
			body[data-layout="blog-post"] {
				main {
					padding: 0;
					margin: 0;
					width: 100% !important;
					max-width: unset;
				}
				article {
					padding: 0;
					margin: 0;
					padding-bottom: calc(var(--viewport-spacing)*2);
					display: grid;
					grid-template-columns:
						1fr
						min(calc(100% - var(--viewport-spacing)*2), 65ch)
						1fr;

					column-gap: var(--viewport-spacing);
					color: rgb(var(--gray-dark));
					& > * {
						grid-column: 2;
					}

					h1,h2,h3,h4,h5,h6 {
						margin: .5em 0 .3em;
					}
					p {
						margin: 0 0 1em;
					}

					hr {
						margin-bottom: 2em;
					}

					h2 {
						color: hsl(var(--color-blue));
					}
				}
				.hero-image {
					margin-top: calc(var(--viewport-spacing) * 2);
					margin-bottom: 1.5em;
					padding-inline: var(--viewport-spacing);
					margin-inline: auto;
					grid-column: 1 / -1;
				}

				.hero-image img {
					border-radius: 12px;
					box-shadow: var(--box-shadow);
				}

				.container {
					margin-inline: calc(var(--viewport-spacing) * -1);
					padding-inline: var(--viewport-spacing);
					container-type: inline-size;
					padding: 0;

					@container (max-width: 906.3px) {
						> * {
							border-radius: 0 !important;
						}
					}

					pre {
						padding: 0 var(--viewport-spacing);
						margin: 0;
						code {
							display: flex;
							flex-direction: column;
						}
					}
				}
				.date {
					color: rgb(var(--gray));
				}
				.last-updated-on {
					font-style: italic;
				}

				.title {
					margin-top: 1rem;
				}
			}
		</style>
	</head>

	<body data-layout="blog-post">
		<Header />
		<main>
			<LikeButton client:load>
				<div data-like-button="liked" style="display: contents;">
					<SmileIcon width={50} height={50} />
				</div>
				<div data-like-button="unliked" style="display: contents;">
					<FrownIcon width={50} height={50} />
				</div>
			</LikeButton>
			<article>
				<div class="hero-image">
					{heroImage && <Image width={1020} height={510} src={heroImage} alt="" />}
				</div>
				<BreadCrumb slug={"blog/"+slug} />
				<h1 class="title">{title}</h1>
				<div class="date">
					<FormattedDate date={pubDate} />
					{
						updatedDate && (
							<div class="last-updated-on">
								Last updated on <FormattedDate date={updatedDate} />
							</div>
						)
					}
				</div>
				<hr />
				<slot />
			</article>
		</main>
		<Footer />
	</body>
</html>
